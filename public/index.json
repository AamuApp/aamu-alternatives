[{"content":"In the digital realm, safeguarding sensitive information against cyber threats is paramount. Aamu.app distinguishes itself by implementing a robust encryption scheme centered on symmetric key encryption and encrypting the data at rest. Let\u0026rsquo;s delve into the technical intricacies of this approach to comprehend its role in enhancing data security.\nSymmetric Key Encryption: A Pillar of Data Security Symmetric key encryption relies on a single key for both encryption and decryption processes, forming the foundation of Aamu.app\u0026rsquo;s security architecture. This method ensures the confidentiality and integrity of user data when it is at rest.\nUpon user registration, Aamu.app generates a symmetric secret key. This key is encrypted with the user\u0026rsquo;s password and securely stored in the database. By tying the encryption to the user\u0026rsquo;s password, Aamu.app reinforces security measures, ensuring that data access is contingent upon user authentication.\nData is encrypted at rest With this key the data is encrypted at rest with the AES-256 algorhithm. This means that should there be a data breach, the actual data and information is safe, as it is encrypted. User\u0026rsquo;s secrets will be secret.\nThis also means that the staff at Aamu.app won\u0026rsquo;t be able to access the user\u0026rsquo;s data.\nThis also means that there will not be a \u0026ldquo;forgot password?\u0026rdquo; feature – we cannot create a new password for the user because this new password couldn\u0026rsquo;t access the encrypted data. Only the user will ever know the password and the key to the data.\nSo, don\u0026rsquo;t lose your password!\nData is also encrypted in transit Aamu uses a 4096 bit/SHA256-RSA SSL certificate for the data in transit, so your data is safe when it\u0026rsquo;s moving between you and the server.\nServer-Side Encryption and Decryption: Balancing Security and Practicality Aamu.app adopts a server-side approach to encryption and decryptioy. While this scheme deviates from end-to-end encryption—an ideal scenario—it nonetheless fortifies data protection significantly. Encryption and decryption processes occur within the confines of Aamu.app\u0026rsquo;s server, shielding user data from potential vulnerabilities\nTwo-factor authentication We also have a two-factor authentication when even more security is needed..\nConclusion: Strengthening Data Security with Aamu.app Aamu.app\u0026rsquo;s implementation of symmetric key encryption underscores its commitment to protecting user data in the digital landscape. While not without its limitations, this encryption scheme offers a pragmatic approach to enhancing security without sacrificing usability. As businesses and individuals navigate the complexities of data security, solutions like Aamu.app pave the way for a safer digital environment, where privacy and confidentiality are paramount.\n","permalink":"https://aamu.app/blog/posts/understanding-symmetric-key-encryption-in-aamuapp-elevating-data-security/","summary":"\u003cp\u003eIn the digital realm, safeguarding sensitive information against cyber threats is paramount. Aamu.app distinguishes itself by implementing a robust encryption scheme centered on symmetric key encryption and encrypting the data at rest. Let\u0026rsquo;s delve into the technical intricacies of this approach to comprehend its role in enhancing data security.\u003c/p\u003e\n\u003ch2 id=\"symmetric-key-encryption-a-pillar-of-data-security\"\u003eSymmetric Key Encryption: A Pillar of Data Security\u003c/h2\u003e\n\u003cp\u003eSymmetric key encryption relies on a single key for both encryption and decryption processes, forming the foundation of Aamu.app\u0026rsquo;s security architecture. This method ensures the confidentiality and integrity of user data when it is at rest.\u003c/p\u003e","title":"Understanding Symmetric Key Encryption in Aamu.app: Elevating Data Security"},{"content":"Aamu.app database supports two APIs: one for submitting data into the database via standard html forms – this works just one direction. Also you can get and put data into the database via GraphQL.\nAs Wikipedia says it :\nGraphQL is an open-source data query and manipulation language.\nIt has a syntax for reading and writing the database. For testing it out, it is helpful to have a tool. I like Altair .\nTo use Altair or any similar tool you first need to setup it with the database endpoint and the database API key. The database endpoint is:\nhttps://api.aamu.app/api/v1/graphql/ You can get the API key from your database settings.\nQuerying the database Let\u0026rsquo;s assume we are using the database aamu-blog, which is the actual database which holds the blog posts you are reading now! The database looks like this in Aamu.app (at this moment in time there are only two rows, i.e. posts):\nIt has two tables: \u0026ldquo;Blog post\u0026rdquo; and \u0026ldquo;Person\u0026rdquo;. Our GraphQL API will have these fields for this database (you can use for example Altair GrapQL client to see the database schema):\nSo, the GraphQL API will create two fields for each table, one for fetching a single item (by an ID), e.g. BlogPost and one (BlogPostCollection) for fetching many items (by some criteria you define).\nLet\u0026rsquo;s see how to get a single item. This is the query:\nquery { BlogPost (slug: \u0026#34;introduction-to-aamuapp-graphql\u0026#34;) { id created updated title slug description body status } } When you do the query, you will get the data back (if it exists) as json:\n{ \u0026#34;data\u0026#34;: { \u0026#34;BlogPost\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;3cfa30f8-ab29-459a-ad91-0651ae0b08ad\u0026#34;, \u0026#34;created\u0026#34;: \u0026#34;2021-10-19T19:11:49.257Z\u0026#34;, \u0026#34;updated\u0026#34;: \u0026#34;2024-03-09T07:38:23.916Z\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Introduction to Aamu.app GraphQL\u0026#34;, \u0026#34;slug\u0026#34;: \u0026#34;introduction-to-aamuapp-graphql\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;How to use the database from a distance\u0026#34;, \u0026#34;body\u0026#34;: \u0026#34;Aamu.app database supports two APIs: one for submitting data into the database via standard html forms – this works just one direction. Also you can get and put data into the database via GraphQL. ... etc You can also get items by querying the field BlogPostCollection. This gives you multiple rows. You can also do filtering, sorting and pagination.\nLet\u0026rsquo;s see how getting multiple posts goes. Let\u0026rsquo;s get all the blog posts that are published (status is \u0026ldquo;published\u0026rdquo;) and the results will be sorted by creation date (older first):\nquery { BlogPostCollection( filter: { status: { EQ: \u0026#34;published\u0026#34; } } sort: { created: DESC } ) { title slug created description } } This will give the following results:\n{ \u0026#34;data\u0026#34;: { \u0026#34;BlogPostCollection\u0026#34;: [ { \u0026#34;title\u0026#34;: \u0026#34;Introduction to Aamu.app GraphQL\u0026#34;, \u0026#34;slug\u0026#34;: \u0026#34;introduction-to-aamuapp-graphql\u0026#34;, \u0026#34;created\u0026#34;: \u0026#34;2021-10-19T09:00:00.000Z\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;How to use the database from a distance\u0026#34; }, { \u0026#34;title\u0026#34;: \u0026#34;Introduction to Aamu.app\u0026#34;, \u0026#34;slug\u0026#34;: \u0026#34;introduction-to-aamu-app\u0026#34;, \u0026#34;created\u0026#34;: \u0026#34;2021-10-10T09:00:00.000Z\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Aamu.app is an all-in-one productivity tool\u0026#34; } ] } } You can use other filtering methods, for example GT (Greater Than):\nquery { BlogPostCollection( filter: { status: { EQ: \u0026#34;published\u0026#34; } updated: { GT: updated: { GT: \u0026#34;2022-01-04T02:15:37.975Z\u0026#34; } } } ) { id created updated title slug description body heroImage { url } author { name } status tags } } This is the actual query which I\u0026rsquo;m using to create this blog you are reading. This will fetch all the updated blog posts since I ran this last time (since I built the blog last time). I\u0026rsquo;m using Hugo to create this blog, and the blog posts are in Aamu\u0026rsquo;s database and I\u0026rsquo;m writing this using the Aamu\u0026rsquo;s Documents feature.\nNote that there is a field called heroImage, which has a subfield url. You can find all the fields with Altair \u0026rsquo;s Docs feature. It will fetch the database structure and you will see all the fields that you can query (or mutate).\nWith Altair you can also see what kind of filtering you can do. For example, Altair sees that the updated field is a date and will give you the following filtering options:\nYou can get that list by pressing Ctrl-Space.\nYou can also get similar lists in every spot in the query window – all the fields and filtering options will be easy to see.\nMutating the database Here we show at how we can mutate database rows.\nAt the moment you can mutate single objects, which are targeted with the `id` field.\nHere we update a database row in our Person table. We will target the row that we want to change with the id field. In Aamu.app, the id field is a string and you can find the correct id by first querying the persons, possibly with some criteria.\nHere is an example mutation query. It will change the title of the person and return some fields that we want to see about the person.\nmutation { Person(id: \u0026#34;29940627-51e8-4fd0-82ab-d718ddfe802f\u0026#34;, title: \u0026#34;Chief Procrastination Officer (CPO)\u0026#34;) { id created updated name bio title } } ","permalink":"https://aamu.app/blog/posts/introduction-to-aamuapp-graphql/","summary":"\u003cp\u003eAamu.app database supports two APIs: one for submitting data into the database via standard html forms – this works just one direction. Also you can get and put data into the database via GraphQL.\u003c/p\u003e\n\u003cp\u003eAs Wikipedia \u003ca href=\"https://en.wikipedia.org/wiki/GraphQL\"   target=\"_blank\"\u003esays it\u003c/a\u003e\n:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGraphQL is an open-source data query and manipulation language.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eIt has a syntax for reading and writing the database. For testing it out, it is helpful to have a tool. I like \u003ca href=\"https://altair-gql.sirmuel.design/\"   target=\"_blank\"\u003eAltair\u003c/a\u003e\n.\u003c/p\u003e","title":"Introduction to Aamu.app GraphQL"},{"content":"Aamu.app is an all-in-one productivity tool, containing a lot of tools that a company needs to get work done collaboratively.\nFirst, let me say who is behind all of this and why you should trust this tool.\nWhy you should trust this tool? Warning: a long explanation ahead.\nI’m Ilkka, a software developer/entrepreneur from Finland. My time is spent in coding, being in nature, and being a dad, all of which I greatly enjoy. I have another business. Embed.rocks , which is an API service and I have been running it for a few years now.\nTrust is an important issue in a tool like this. That trust will be built in time, and at the moment I can only say things. There are several reasons why you should trust this.\nFirst, as a software developer, I’m quite experienced, having been working in several companies in Finland and after those, on my own. That’s multiple decades.\nFrom the technical standpoint,I have tried to distance Aamu.app from the user’s data. That means that everything important is encrypted, server-side, with user\u0026rsquo;s own key (password). It means that even I, or anyone outside of that particular user/team cannot access that data. Meta-data, like timestamps and such, are not encrypted in a similar fashion, but mostly everything that the users are inputting by themselves, are. Some exceptions exist, which will be talked about later.\nThis server-side encryption also means, that if you, the user, lose your password, you cannot access your data after that. So you should really keep good care of your password, i.e. save it in a safe place! There is no “forgot password” feature at all!\nThe third reason why you should trust this tool is that there are really no costs of running this. The server hosting fees are small and easily covered by my other business. Besides the hosting fees there are no other costs. So, this will stay online as long as I am alive and well. There is a possibility that something happens to me, and then this service could go down. I will hire someone to help me with this as soon as I can, so even this will not be an issue in the future.\nYou, the user, can also download all your data at any point, so you can make backups and take the data with you as you wish.\nSo, what is Aamu.app anyway? It’s a productivity tool, but you knew that already. So, let’s get a little deeper.\nThe plan is to have everything that a company might need for its most important, daily productivity/office tasks, in a single package. Along that there should be collaboration integrated throughout tool. The user interface should be unified throughout. And of course everything should be easy to use.\nThat’s the plan and this is the start. Let’s see what we have so far.\nFeatures So, even though there are quite a lot of features, the combination shouldn’t feel overwhelming. This, like already said, the user interface will be unified.\nTasks Tasks are an important feature. Just about every company needs tasks.\nThe tasks have a few different views:\nlist kanban board calendar timeline Above, you can see the list, which is the standard view. Below there is the kanban board.\nHere we have the calendar, which looks and works just like Google Calendar. Oh, and there is also the Google Calendar synchronization – your events will do an automatic two-way with Google Calendar. And also with iOS calendar, should you have synchronization with that and Google Calendar, like most probably will. Helpdesk Helpdesk is also important and almost every company needs one. With helpdesk, you can handle customer support through what is called tickets. These tickets are currently created by email or by live chat (real time chat on your marketing website). In the future we may expand to handling customer support through social networks, but currently it’s just email and live chat,\nBy the way, at this point you may have noticed, that every main level feature looks and feels pretty much the same. This familiarity is important for the unified experience through our service.\nTo connect the helpdesk to an email account, you will need an IMAP connectivity, at the moment, We will improve this later so that IMAP isn’t needed.\nThe data (text) in tickets is encrypted – with the exception of titles. The titles are needed for creating email threads and titles are not encrypted.\nEmails You may start to see that all the features resemble each other quite a bit. That\u0026rsquo;s intentional — the same familiar user interface greets you everywhere in this app. No need to learn many things, just one and its variations.\nThe emails feature is what you would expect, emails – for all of your domains.\nDocuments Documents are like Google™ Docs, they may or may not be important for you. With this you can create all sorts of documents or ebooks (pdf). You can publish them for the world to see or you can keep them for your own use. In case it’s for your own use, everything is encrypted, but if it’s published, then it’s not encrypted – so you decide how secure you want them to be,\nThe data in the documents is totally secure – it’s encrypted with your team’s key. If you share the document with the world, then it is made plain text and unencrypted.\nDatabase Databases can be used for a lot of things and they can be easily connected to outside world. For example, I am using the database feature as a headless CMS for this very blog. I am currently writing this blog post in the database – you can see that in the picture above. You can also get the JavaScript sources for this blog on GitHub .\nDatabases can be used for blogs, contact forms, single page apps, e-commerce sites, CRMs (customer relations management) and so on. There is a GraphQL and forms API to connect your sites to the database. And of course we have a lot of templates to start with.\nAlso the data in the databases is encrypted, unless you choose them to not be. If you create an API key, then the data will become unencrypted – so you may use the GrahphQL feature, or API key, in only the databases where data security isn’t the top priority. At least for now.\nForms With the form build you can build forms. The data will go to the database (where you can see it separately and do all the things you can do with databases) and also the summary of the data (answers) will be shown to you.\nVideo Meetings Meetings,mean online, or video meetings, as is quite usual today. We are using Jitsi for this, which is well tested and secure video conferencing software, also open source.\nYou can invite participants to the meetings who are not users in Aamu.app , i.e. they are outside guests.\nNote: meeting names are not encrypted for technical reason (the notification system needs to “see” the names).\nDesigns We have integrated Penpot (https://penpot.app/ ) into Aamu.app. Penpot is like Figma, but Open Source!\nSecurity As you may have noticed, we have talked a bit on encryption. What this means in practice, is that all the important data (things you upload, data in tasks, databases, helpdesk, etc.) is encrypted with your team’s key and only your team can access that data. The encryption happens on the server, so this isn’t end-to-end encryption. But this is still a lot more secure than not encrypting the data, as then a hacker might get access to it.\nDon’t lose your password, though! As the data can be accessed only with your key (your password), only you and your team can access it. We don’t have access to your unencrypted data!\nPricing Some of you may wonder what’s with the price, which is $5/user/month, with the free option there as well. That seems kind of low, right? Yes, it kind of does.\nI have always, personally, looked for “good deals”, i.e. bought things as used and generally gone for things that offer good value for the price. This is prices similarly. I like if everybody can afford this and if this offers a good value. I understand that the price can “send a signal” but I have chosen not to worry about it. I believe (or hope) that people will notice the value of this service – in time.\nWhat about that name? Aamu means “morning” in Finnish. I think it’s also quite a beautiful name, aesthetically. And it comes early in the alphabetics. It’s simple and distinctive. And most people start working in the morning 😃.\nThat’s it! So, that’s it so far. There are perhaps some features missing that you might expect. For example email – currently you can use the helpdesk for basic email activity, but we will create a more complete email experience later (or, next, actually).\nTry it out and leave us feedback by clicking the email icon on the bottom of the screen. We would really appreciate the feedback. Thanks!\n","permalink":"https://aamu.app/blog/posts/introduction-to-aamu-app/","summary":"\u003cp\u003eAamu.app is an all-in-one productivity tool, containing a lot of tools that a company needs to get work done collaboratively.\u003c/p\u003e\n\u003cp\u003eFirst, let me say who is behind all of this and why you should trust this tool.\u003c/p\u003e\n\u003ch2 id=\"why-you-should-trust-this-tool\"\u003eWhy you should trust this tool?\u003c/h2\u003e\n\u003cp\u003eWarning: a long explanation ahead.\u003c/p\u003e\n\u003cp\u003eI’m Ilkka, a software developer/entrepreneur from Finland. My time is spent in coding, being in nature, and being a dad, all of which I greatly enjoy. I have another business. \u003ca href=\"https://embed.rocks/\"   target=\"_blank\"\u003eEmbed.rocks\u003c/a\u003e\n, which is an API service and I have been running it for a few years now.\u003c/p\u003e","title":"Introduction to Aamu.app"}]